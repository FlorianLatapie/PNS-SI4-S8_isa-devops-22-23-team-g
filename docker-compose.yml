version: "3"

services:
  mfc-server-staging:
    image: teamgisadevops2023/backend
    build:
        context: ./backend
        dockerfile: dev.Dockerfile
        args:
            JAR_FILE: mfc-backend-0.1.0-SNAPSHOT.jar
    container_name: mfc-server-staging
    ports: 
      - 8080:8080
    environment:
      - BANK_WITH_PORT=bank-system-staging:9090
      - POSTGRES_DB_NAME=mfc-db-staging
      - POSTGRES_HOST=mfc-postgres-staging:5432
    entrypoint: "bash -c '/opt/app/wait-for-it.sh $${POSTGRES_HOST} -- java -jar /opt/app/app.jar --bank.host.baseurl=http://$${BANK_WITH_PORT}'"
    depends_on:
      - bank-system-staging
      - mfc-postgres-staging

  mfc-cli-staging:
    image: teamgisadevops2023/cli
    build:
        context: cli
        dockerfile: dev.Dockerfile
        args:
            JAR_FILE: mfc-cli-0.1.0-SNAPSHOT.jar
    container_name: mfc-cli-staging
    environment:
      - SERVER_WITH_PORT=mfc-server-staging:8080
    entrypoint: "bash -c '/opt/app/wait-for-it.sh $${SERVER_WITH_PORT} -- java -jar /opt/app/app.jar'"
    depends_on:
      - mfc-server-staging
    volumes:
      - ./cli/demo:/opt/app/demo
    stdin_open: true
    tty: true

  bank-system-staging:
    image: teamgisadevops2023/bank
    build:
        context: bank
        dockerfile: dev.Dockerfile
    container_name: bank-system-staging
  
  mfc-postgres-staging:
    image: postgres:15.2
    container_name: mfc-db-staging
    environment:
      - POSTGRES_PASSWORD=postgrespass
      - POSTGRES_USER=postgresuser
      - POSTGRES_DB=mfc-db-staging
networks:
  default:
    name: mfc-network-staging